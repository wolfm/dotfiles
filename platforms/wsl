#!/usr/bin/env bash

# Windows clipboard copy and paste
alias wclip=clip.exe
alias wpaste="powershell.exe Get-Clipboard"
alias ollama=ollama.exe

# Windows XMing startup and stop commands

# Default Xming path. Replace in device-specific script if located on a different path.
export XMING_PATH='C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Xming\Xming.lnk'
xming_usage() {
	echo "usage: xming start|stop|status"
	echo "Starts/stops/reports status of the xming daemon on the host windows machine."
}
xming() {
	# Usage
	if [[ $# -ne 1 ]]; then
		xming_usage

	# Start Xming (if not already running)
	elif [[ $1 == "start" ]]; then
		if [[ -n $DISPLAY ]]; then
			echo "xming is already running."
			return 2
		else
			powershell.exe "& '${XMING_PATH}' -multiwindow -clipboard -ac"
			# Configure display for Windows host's X server
			export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2; exit;}'):0
		fi

	# Stop xming (if running)
	elif [[ $1 == "stop" ]]; then
		if [[ -n $DISPLAY ]]; then
			powershell.exe "Get-Process -Name XMing |Stop-Process"
			export DISPLAY=""
		else
			echo "xming is not running."
			return 3
		fi

	# Write xming status to stdout
	elif [[ $1 == "status" ]]; then
		if [[ -n $DISPLAY ]]; then
			echo "xming is running. DISPLAY=$DISPLAY"
		else
			echo "xming is not running."
		fi
	else
		xming_usage
		return 1
	fi
}

# Change other-writable directories to be orange instead of green-highlighted
# Useful on wsl because many windows directories are modeled as other-writable
LS_COLORS=$LS_COLORS'ow=33:'

# beep via powershell
_beep() {
    powershell.exe "[console]::beep($1,$2)"
}
alias beep="_beep 1800 300"


### WSL DEFAULTS ###
if ! [ -n $BASH ]; then
    # If this is an xterm set the title to user@host:dir
    case "$TERM" in
    xterm*|rxvt*)
        PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
        ;;
    *)
        ;;
    esac
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac
